# This workflow will perform a build test
name: Build test

on:
  # On pull-request event with detailed condition below.
  pull_request:
    branches:
      - master
    paths:
      - 'src/**'
      - '!**.md'
      - '!LICENSE'
      
jobs:
  # The job key is "build"
  build:
    # Job name is "Build"
    name: Build

    if: >-
      ${{ !contains(github.event.pull_request.title, 'skip ci') &&
      !contains(github.event.pull_request.title, 'ci skip') &&
      !contains(github.event.pull_request.title, 'no ci') &&
      !contains(github.event.pull_request.title, 'skip actions') &&
      !contains(github.event.pull_request.title, 'actions skip')
      }}

    # This job runs on Ubuntu-latest
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go-version: [ '1.16' ]
    
    steps:
      # This action sets up a go environment for use in actions by:
      #     optionally downloading and caching a version of Go by version and adding to PATH
      #     registering problem matchers for error output
      # This step uses GitHub's setup-go: https://github.com/actions/setup-go
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
        
      # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      # This step uses GitHub's checkout: https://github.com/actions/checkout
      - name: Checkout source code
        uses: actions/checkout@v3

      # This step builds source codes
      - name: Build test
        run: |
          cd src
          make
