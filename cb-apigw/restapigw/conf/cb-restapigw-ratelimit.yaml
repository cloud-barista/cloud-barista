version: 1
name: cb-restapigw
port: 8000
cache_ttl: 3600s
timeout: 1m
debug: true
host: 
  - "http://localhost:8100"
middleware:
  mw-metrics:
    router_enabled: true
    proxy_enabled: true
    backend_enabled: true
    collection_period: 10s
    expose_metrics: false
    listen_address: 0.0.0.0:9000
    influxdb:
      address: "http://localhost:8086"
      database: cbrestapigw
      reporting_period: 11s
      buffer_size: 0
  mw-opencensus:
    sample_rate: 100
    reporting_period: 10s
    enabled_layers:
      router: true
      proxy: true
      backend: true
    exporters:
      jaeger:
        endpoint: http://localhost:14268/api/traces
        service_name: cbrestapigw
  mw-cors:
    allow_origins:
      - "*"
    allow_methods:
      - POST
      - GET
    allow_headers:
      - Origin
      - Authorization
      - Content-Type
    expose_headers:
      - Content-Length
    max_age: 12h
    allow_credentials: true
endpoints:
  ##############
  # For Fake API Test (collection. header/querystring passing and blacklist)
  ##############
  - endpoint: "/splash"
    except_querystrings:
      - "name"
      - "querystring"
    except_headers:
      - "Testing"
    middleware:
      mw-ratelimit:
        max_rate: 5
        client_max_rate: 10
        strategy: "ip"  #header #ip
        key: "" #"X-Private-Token"
    backend:
      - url_pattern: "/shop/campaigns.json"
        whitelist:
          - "campaigns"
      - url_pattern: "/shop/products.json"
        middleware:
          mw-proxy:
            flatmap_filter:
              - type: "move"
                args:
                  - "products.*.id"
                  - "products.*.id-"
              - type: "del"
                args:
                  - "products.*.image"
                  - "products.*.body_html"
                  - "products.*.created_at"
                  - "products.*.handle"
                  - "products.*.product_type"
                  - "products.*.published_at"
                  - "products.*.published_scope"
                  - "products.*.tags"
                  - "products.*.template_suffix"
                  - "products.*.updated_at"
                  - "products.*.vendor"
          mw-ratelimit:
            max_rate: 1
            capacity: 1
  - endpoint: "/sequential"
    backend:
      - url_pattern: "/hotels/1.json"
        whitelist:
          - "destination_id"
      - url_pattern: "/destinations/{resp0_destination_id}.json"
        target: "destinations"
        middleware:
          mw-http:
            return_error_details: "sequential"
    middleware:
      mw-proxy:
        sequential: true
  - endpoint: "/fail"
    backend:
      - url_pattern: "/user/1.json"
        group: "user"
        target: "address"
        middleware:
          mw-http:
            return_error_details: "fail_1"
      - host:
          - "http://fake_url_that_should_not_resolve.tld"
        url_pattern: "/"
        group: "none"
  - endpoint: "/public"
    method: GET
    backend:
      - host: 
          - "https://api.github.com"
        url_pattern: "/users/ccambo"
        whitelist:
          - "avatar_url"
          - "name"
          - "company"
          - "blog"
          - "location"
          - "mail"
          - "hireable"
          - "followers"
          - "public_repos"
          - "public_gists"
        mapping:
          "blog": "website"
        group: "github"
        middleware:
          mw-httpcache: 
            enabled: true
      - host: 
          - "https://api.bitbucket.org"
        url_pattern: "/2.0/users/kpacha"
        whitelist:
          - "links.avatar"
          - "display_name"
          - "website"
          - "location"
        mapping: 
          "display_name": "name"
        group: "bitbucket"
  - endpoint: "/github/{user}"
    method: GET
    backend:
      - host:
          - https://api.github.com
        url_pattern: "/users/{user}"
        disable_host_sanitize: true
  - endpoint: "/collection"
    method: GET
    backend:
      - url_pattern: "/destinations/2.json"
        wrap_collection_to_json: false
        is_collection: true
        mapping:
          "collection": "data"
  - endpoint: "/private/custom"
    backend:
      - url_pattern: "/user/1.json"
    middleware:
      mw-auth:
        secure_key: "###TEST_SECURE_KEY###"
        access_ids:
          - etri

  ##############
  # For Spider
  ##############
  - endpoint: "/spider/*bypass"
    middleware:
      mw-ratelimit:
        max_rate: 10
        client_max_rate: 5
        strategy: "ip"
    backend:
      - host: "http://localhost:1024"
        url_pattern: "*bypass"
        middleware:
          mw-ratelimit:
            max_rate: 2
            capacity: 5

  #################
  # For Tumblebug
  #################
  - endpoint: "/tumblebug/*bypass"
    middleware:
      mw-ratelimit:
        max_rate: 100
        client_max_rate: 100
        strategy: "ip"
    backend:
      - host: "http://localhost:1323"
        url_pattern: "*bypass"
        middleware:
          mw-ratelimit:
            max_rate: 1
            capacity: 1