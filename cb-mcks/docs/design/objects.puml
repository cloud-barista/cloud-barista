@startuml

header Cloud-Barista
title objects
skinparam object {
	' backgroundColor	GreenYellow
	ArrowColor		DarkGray
	BorderColor		LightGray
}

' # spider ----------------
object region #WhiteSmoke {
	region
	zone
}
object credential #WhiteSmoke {
}
object awsCredential #WhiteSmoke {
	aws_secret_access_key
	aws_access_key_id
}
object gcpCredential #WhiteSmoke {
	project_id
	private_key
	client_email
}
object azureCredential #WhiteSmoke {
	client_id
	client_secret
	tenant_id	
	subscription_id
}
object alibabaCredential #WhiteSmoke {
	client_id
	client_secret
}
object tencentCredential #WhiteSmoke {
	client_id
	client_secret
}
object openstackCredential #WhiteSmoke {
	identity_endpoint
	username
	password
	domain_name
	project_id
}

object config #WhiteSmoke {
}
object vm #WhiteSmoke {
}
' }
awsCredential	--|>	credential
gcpCredential	--|>	credential
azureCredential	--|>	credential
alibabaCredential	--|>	credential
tencentCredential	--|>	credential
openstackCredential	--|>	credential
config			-->		credential
config			-->		region

' # tumblebug ----------------
object namespace #WhiteSmoke {
}
object vpc #WhiteSmoke {
	cidr
	subnet.name
	subnet.cidr
}
object firewall #WhiteSmoke {
}
object ssh #WhiteSmoke {
}
object image #WhiteSmoke {
}
object spec #WhiteSmoke {
}
object mcis #WhiteSmoke {
}

vpc		-->		firewall
vm		-->		vpc
vm		-->		config
vm		-->		ssh
vm		-->		image
vm		-->		spec
mcis	*-->	vm


' # mcks ----------------
object cluster {
	+name
	+status
	+namespace
	+mcis
	+clusterConfig
	+cpLeader
	+networkCni
	+label
	+installMonAgent
	+description
	+createdTime
}
object kubernetesCluster {
	kubernetesConfiguration
}

object kubernetesConfiguration {
	+kubernetesVersion
	+controlPlaneEndpoint
	+apiServer
	+controllerManager
	+etcd
	+networking
	+scheduler
}
object node  {
	+name
	+credential
	+public-ip
	+role
	+spec
	+csp
	+createdTime
	+cspLabel
	+regionLabel
	+zoneLabel
	cluster-name
}
object controlPlane  {
	role = "control-plane"
}
object workerNode  {
	role = "worker"
}

controlPlane	--|>	node
workerNode		--|>	node


object clusterConfig  {
}

object kubeConfig  {
	+cluster
	+user
	+context
}

cluster		-->	 	namespace
cluster		*--		node
cluster		-->		mcis
cluster		-->		clusterConfig

kubernetesCluster	--|>	cluster
kubernetesCluster	-->		kubernetesConfiguration
node				..		vm

kubeConfig		--|>	clusterConfig


'' # mcks controller ----------------
'object clusterDeployment #GreenYellow {
'	+namespace
'	+mcis
'	+controlPlaneCount
'	+wokrerCount
'}
'object nodeSet #GreenYellow {
'	+replicas
'}


'clusterDeployment	-->		cluster
'clusterDeployment	..>		mcis
'nodeSet				*-->	node
'nodeSet				..		clusterDeployment

@enduml