#!/bin/bash

## MCIS name prefix text
MCISPREFIX=mcis

## MCIS monitoring agent install. [yes or no]
AgentInstallOn=no

## Number of CSP types and corresponding regions
NumCSP=1

## Define sequential test order for cloud types 
# Note: you can change order by replacing lines (automatically assign continuous numbers starting from 1)
IX=0
IndexAWS=$((++IX))

IndexAzure=$((++IX))
IndexGCP=$((++IX))
IndexAlibaba=$((++IX))


IndexMock=$((++IX))
IndexOpenstack=$((++IX))
IndexNCP=$((++IX))


## Designated strings for Cloud types
# Note: don't need to touch unless you are adding new Cloud type
CSPType[$IndexAWS]=aws
CSPType[$IndexAlibaba]=alibaba
CSPType[$IndexGCP]=gcp
CSPType[$IndexAzure]=azure
CSPType[$IndexMock]=mock
CSPType[$IndexOpenstack]=openstack
CSPType[$IndexNCP]=ncp


## Test setting for Regions of Cloud types 
# Note: you can change order by replacing lines (automatically assign continuous numbers starting from 1)

# AWS (Total: 20 Regions / Recommend: 20 Regions)
NumRegion[$IndexAWS]=9

IY=0

AwsMeSouth1=$((++IY))			    # Location: AWS Middle East (Bahrain)  -  Opt-In required

AwsApSouth1=$((++IY))				# Location: AWS Mumbai

AwsEuCentral1=$((++IY))				# Location: Europe (Frankfurt)

AwsApEast1=$((++IY))			    # Location: AWS Hongkong  -  Opt-In required

AwsEuNorth1=$((++IY))				# Location: Europe (Stockholm) - No t2.xxx Specs. t3 c5 m5 r5 .. are availble

AwsEuWest2=$((++IY))				# Location: AWS London

AwsEuWest3=$((++IY))				# Location: Europe (Paris)

AwsApSoutheast1=$((++IY))			# Location: AWS Singapore

AwsEuWest1=$((++IY))				# Location: Europe (Ireland)



AwsApNortheast1=$((++IY))			# Location: AWS Tokyo
AwsApNortheast3=$((++IY))			# Location: Asia Pacific (Osaka)

AwsAfSouth1=$((++IY))			    # Location: AWS Africa (Cape Town)  -  Opt-In required

AwsSaEast1=$((++IY))				# Location: South America (SÃ£o Paulo)

AwsApSoutheast2=$((++IY))			# Location: AWS Sydney

AwsCaCentral1=$((++IY))				# Location: AWS Canada Central
AwsUsWest1=$((++IY))				# Location: AWS US West
AwsUsEast1=$((++IY))				# Location: AWS US East
AwsUsEast2=$((++IY))				# Location: US East (Ohio)
AwsUsWest2=$((++IY))				# Location: US West (Oregon)

AwsApNortheast2=$((++IY))			# Location: AWS Seoul



# Alibaba (Total: 23 Regions / Recommend: 8 Regions)
NumRegion[$IndexAlibaba]=3

IY=0
AlibabaApNortheast1=$((++IY))		# Location: Japan (Tokyo)
AlibabaApSoutheast1=$((++IY))		# Location: Singapore [zone:a,b,c]
AlibabaApSoutheast3=$((++IY))		# Location: Malaysia (Kuala Lumpur) [zone:a,b]
AlibabaApSoutheast5=$((++IY))		# Location: Indonesia (Jakarta) [zone:a,b]

AlibabaApSoutheast2=$((++IY))		# Location: Australia (Sydney) [zone:a,b]

AlibabaApSouth1=$((++IY))			# Location: Mumbai Zone A 

AlibabaUsWest1=$((++IY))			# Location: US (Silicon Valley) [zone:a,b]
AlibabaUsEast1=$((++IY))			# Location: US (Virginia) [zone:a,b]


AlibabaEuCentral1=$((++IY))			# Location: Germany (Frankfurt) [zone:a,b] - ERR: Unable to get GetVMSpec - context deadline exceeded
AlibabaEuWest1=$((++IY))			# Location: UK (London) [zone:a,b] - ERR: Unable to get GetVMSpec - context deadline exceeded 
AlibabaMeEast1=$((++IY))			# Location: UAE (Dubai) [zone:a] - Few VM Specs are available
AlibabaCnHongkong=$((++IY))			# Location: China (Hong Kong) [zone:b,c] - NEED TO CHECK NETWORK OUTBOUND 
AlibabaCnShanghai=$((++IY))			# Location: China (Shanghai) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnBeijing=$((++IY))			# Location: China (Beijing) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnQingdao=$((++IY))			# Location: China (Qingdao) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnZhangjiakou=$((++IY))		# Location: China (Zhangjiakou) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnHuhehaote=$((++IY))		# Location: China (Hohhot) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnHangzhou=$((++IY))			# Location: China (Hangzhou) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnShenzhen=$((++IY))			# Location: China (Shenzhen) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnHeyuan=$((++IY))			# Location: China (Heyuan) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnChengdu=$((++IY))			# Location: China (Chengdu) - NEED TO CHECK NETWORK OUTBOUND
AlibabaCnWulanchabu=$((++IY))		# Location: China (Ulanqab) - ERR: InvalidSystemDiskCategory.ValueNotSupported - NEED TO CHECK NETWORK OUTBOUND. no ecs.t5 available. 
AlibabaCnGuangzhou=$((++IY))		# Location: China (Guangzhou) - NEED TO CHECK NETWORK OUTBOUND. no ecs.t5 available.



# GCP (Total: 23 Regions / Recommend: 22 Regions)
NumRegion[$IndexGCP]=7

IY=0

GcpEuropeNorth1=$((++IY))			# Location: Hamina  Finland
GcpEuropeWest1=$((++IY))			# Location: St. Ghislain  Belgium
GcpEuropeWest2=$((++IY))			# Location: London  England  UK
GcpEuropeWest4=$((++IY))			# Location: Eemshaven  Netherlands
GcpEuropeWest6=$((++IY))			# Location: Zurich  Switzerland
GcpEuropeWest3=$((++IY))			# Location: Frankfurt  Germany

GcpNorthamericaNortheast1=$((++IY))	# Location: Montreal  Quebec  Canada


GcpAsiaEast1=$((++IY))				# Location: Changhua County  Taiwan
GcpAsiaEast2=$((++IY))				# Location: Hong Kong
GcpAsiaNortheast1=$((++IY))			# Location: Tokyo  Japan
GcpAsiaNortheast2=$((++IY))			# Location: Osaka  Japan
GcpAsiaNortheast3=$((++IY))			# Location: Seoul  South Korea
GcpAsiaSoutheast1=$((++IY))			# Location: Jurong West  Singapore

GcpAustraliaSoutheast1=$((++IY))	# Location: Sydney  Australia

GcpUsCentral1=$((++IY))				# Location: Council Bluffs  Iowa  USA
GcpUsEast1=$((++IY))				# Location: Moncks Corner  South Carolina  USA
GcpUsEast4=$((++IY))				# Location: Ashburn  Northern Virginia  USA
GcpUsWest1=$((++IY))				# Location: The Dalles  Oregon  USA
GcpUsWest2=$((++IY))				# Location: Los Angeles  California  USA
GcpUsWest3=$((++IY))				# Location: Salt Lake City  Utah  USA
GcpUsWest4=$((++IY))				# Location: Las Vegas  Nevada  USA

GcpSouthamericaEast1=$((++IY))		# Location: Osasco (Sao Paulo)  Brazil


GcpAsiaSouth1=$((++IY))				# Location: Mumbai  India (zone b since zone a returns QUOTA_EXCEEDED)





# Azure (Total: 40 Regions / Recommend: 34 Regions)
NumRegion[$IndexAzure]=10

IY=0
AzureCentralus=$((++IY))			# Location: Central US
AzureEastus=$((++IY))				# Location: East US
AzureEastus2=$((++IY))				# Location: East US 2
AzureWestus=$((++IY))				# Location: West US
AzureSouthcentralus=$((++IY))		# Location: South Central US
AzureNorthcentralus=$((++IY))		# Location: North Central US
AzureWestcentralus=$((++IY))		# Location: West Central US
AzureWestus2=$((++IY))				# Location: West US 2

AzureCanadacentral=$((++IY))		# Location: Canada Central
AzureCanadaeast=$((++IY))			# Location: Canada East

AzureNortheurope=$((++IY))			# Location: North Europe
AzureUksouth=$((++IY))				# Location: UK South
AzureUkwest=$((++IY))				# Location: UK West
AzureFrancecentral=$((++IY))		# Location: France Central
AzureGermanywestcentral=$((++IY))	# Location: Germany West Central
AzureSwitzerlandnorth=$((++IY))		# Location: Switzerland North
AzureNorwayeast=$((++IY))			# Location: Norway East


AzureWesteurope=$((++IY))			# Location: West Europe

AzureBrazilsouth=$((++IY))			# Location: Brazil South


AzureKoreacentral=$((++IY))			# Location: Korea Central
AzureKoreasouth=$((++IY))			# Location: Korea South
AzureEastasia=$((++IY))				# Location: East Asia
AzureSoutheastasia=$((++IY))		# Location: Southeast Asia
AzureJapanwest=$((++IY))			# Location: Japan West
AzureJapaneast=$((++IY))			# Location: Japan East

AzureAustraliaeast=$((++IY))		# Location: Australia East
AzureAustraliasoutheast=$((++IY))	# Location: Australia Southeast
AzureAustraliacentral=$((++IY))		# Location: Australia Central
AzureAustraliacentral2=$((++IY))	# Location: Australia Central 2


AzureSouthafricanorth=$((++IY))		# Location: South Africa North



AzureSouthindia=$((++IY))			# Location: South India
AzureCentralindia=$((++IY))			# Location: Central India
AzureWestindia=$((++IY))			# Location: West India
AzureUaenorth=$((++IY))				# Location: UAE North





AzureSouthafricawest=$((++IY))		# Location: South Africa West (not recommend)
AzureSwitzerlandwest=$((++IY))		# Location: Switzerland West (not recommend)
AzureGermanynorth=$((++IY))			# Location: Germany North (not recommend)
AzureUaecentral=$((++IY))			# Location: UAE Central (not recommend)
AzureNorwaywest=$((++IY))			# Location: Norway West (not recommend)
AzureFrancesouth=$((++IY))			# Location: France South (not recommend)



# Mock (Total: 1 Regions / Recommend: 1 Regions)
NumRegion[$IndexMock]=1

IY=0
MockSeoul=$((++IY))					# Location: Korea Seoul (Virtual)



# Openstack (Total: 1 Regions / Recommend: 1 Regions)
NumRegion[$IndexOpenstack]=1

IY=0
OpenstackRegion01=$((++IY))			# Location: Korea Daejeon (Internal)



# NCP (Total: 5 Regions / Recommend: ? Regions / Not tested yet)
NumRegion[$IndexNCP]=5

IY=0
NcpKorea1=$((++IY))					# Location: NCP Korea
NcpUsWestern=$((++IY))				# Location: NCP US West
NcpGermany=$((++IY))				# Location: NCP Germany
NcpSingapore=$((++IY))				# Location: NCP Singapore
NcpJapan=$((++IY))					# Location: NCP Japan
